plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// groupid and versioning
group 'dev.spaceseries'

project.ext.majorVersion = '1'
project.ext.midVersion = '0'
project.ext.minorVersion = '11'
project.ext.versionType = ''
project.ext.version = project.ext.majorVersion + '.' + project.ext.midVersion + '.' + project.ext.minorVersion + (project.ext.versionType != '' ? ("-" + project.ext.versionTypeproject.ext.versionType) : '');
version = project.ext.version

// repos
repositories {
    mavenCentral()
    jcenter()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

// dependencies
dependencies {
    // spigot
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    // bungee
    compileOnly 'net.md-5:bungeecord-api:1.16-R0.4'

    // redis
    implementation 'redis.clients:jedis:3.5.1'

    // hikari
    implementation('com.zaxxer:HikariCP:4.0.2') {
        exclude group: 'org.slf4j'
    }

    // snakeYAML
    implementation 'org.yaml:snakeyaml:1.27'

    // google
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:30.1.1-jre'
}

// shadow jar task (shades into jar)
shadowJar {

    relocate 'org.checkerframework', "${project.group}.spaceapi.lib.checkerframework"

    // Google
    relocate 'com.google', "${project.group}.spaceapi.lib.google"

    // SnakeYaml
    relocate 'org.yaml.snakeyaml', "${project.group}.spaceapi.lib.snakeyaml"
    relocate 'biz.source_code.base64Coder', "${project.group}.spaceapi.lib.snakeyaml.base64Coder"

    // HikariCP
    relocate 'com.zaxxer.hikari', "${project.group}.spaceapi.lib.hikari"

    // Redis
    relocate 'redis.clients', "${project.group}.spaceapi.lib.redis"
    relocate 'org.apache', "${project.group}.spaceapi.lib.apache"

    archiveName = "spaceapi-${version}.jar"
    classifier = null
}


// builds actual libaries into jar
jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// artifacts
artifacts {
    archives shadowJar
}

// javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

// javadoc
javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

// sources jar
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

// publishing task
publishing {
    repositories {
        maven {
            def releasesRepoUrl = "https://repo.yakovliam.com/releases"
            def snapshotsRepoUrl = "https://repo.yakovliam.com/snapshots"
            url = project.ext.version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
//                username "$CI_REPO_USERNAME"
//                password "$CI_REPO_PASSWORD"
                username System.getenv("CI_REPO_USERNAME")
                password System.getenv("CI_REPO_PASSWORD")
            }
        }
    }
    publications {
        shadow(MavenPublication) { publication ->
            from project.shadow.component(publication)
            artifact sourcesJar
            artifact javadocJar
        }
    }
}